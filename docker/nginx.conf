# ----------------------------------------------
# üåê Main HTTP Server Configuration for SPA
# ----------------------------------------------
server {
    listen 80;
    server_name localhost;

    # Root directory for the built app
    root /usr/share/nginx/html;
    index index.html;

    # SPA Fallback Routing
    location / {
        try_files $uri $uri/ /index.html;
    }

    # Gzip Compression Settings
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/x-javascript
        application/xml
        application/xml+rss;

    # Security Headers
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "DENY" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; connect-src 'self' https://api.nasa.gov;" always;

    # Block access to hidden files (e.g. .env, .git)
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Cache static assets for 1 year (aggressive caching)
    location ~* \.(?:js|css|png|jpg|jpeg|gif|ico|svg|woff2|webp)$ {
        expires 1y;
        add_header Cache-Control "public, immutable" always;
        access_log off;
    }

    # NASA API Proxy (with optional Authorization)
    location /api/ {
        proxy_pass https://api.nasa.gov/;
        
        # Uncomment and handle env var properly via entrypoint or envsubst
        # proxy_set_header Authorization "Bearer ${NASA_API_KEY}";
        
        proxy_set_header Content-Type "application/json";
        proxy_ssl_server_name on;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Ignore logging for common static files
    location = /favicon.ico {
        log_not_found off;
        access_log off;
    }

    location = /robots.txt {
        log_not_found off;
        access_log off;
    }
}

# ----------------------------------------------
# üîí HTTPS Server (Commented Out - Optional)
# Uncomment below if you want to enable HTTPS with Let's Encrypt
# ----------------------------------------------
# server {
#     listen 443 ssl;
#     server_name yourdomain.com www.yourdomain.com;
#
#     ssl_certificate     /etc/letsencrypt/live/yourdomain.com/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/yourdomain.com/privkey.pem;
#     ssl_protocols       TLSv1.2 TLSv1.3;
#     ssl_ciphers         HIGH:!aNULL:!MD5;
#
#     root /usr/share/nginx/html;
#     index index.html;
#
#     location / {
#         try_files $uri $uri/ /index.html;
#         add_header Cache-Control "no-cache, no-store, must-revalidate";
#     }
#
#     # Copy same headers and gzip configs here if needed
# }

# ----------------------------------------------
# üìå Redirect HTTP to HTTPS (Optional)
# Enable this block only if HTTPS is enabled
# ----------------------------------------------
# server {
#     listen 80;
#     server_name yourdomain.com www.yourdomain.com;
#     return 301 https://$host$request_uri;
# }