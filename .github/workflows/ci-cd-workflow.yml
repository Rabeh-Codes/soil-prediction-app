name: NASA Soil Prediction CI/CD Pipeline

on:
  push:
    branches: [main, dev]
    tags: ['v*.*.*']
  pull_request:
    branches: [main, dev]

env:
  DOCKER_IMAGE: nasa-soil-prediction-app
  REGISTRY: ghcr.io
  REGISTRY_PATH: ${{ github.repository_owner }}/${{ env.DOCKER_IMAGE }}

jobs:
  lint-and-test:
    name: Lint and Test
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci

      - name: Run Linters and Formatter Check
        run: |
          npm run lint
          npm run format:check

      - name: Run Unit Tests
        run: npm run test:run
        env:
          CI: true

      - name: Build Application (for verification)
        run: npm run build

  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: lint-and-test
    timeout-minutes: 45
    if: ${{ github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev' || startsWith(github.ref, 'refs/tags/v') }}
    permissions:
      packages: write
      contents: read

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ env.REGISTRY }}/${{ env.REGISTRY_PATH }}:latest
            ${{ env.REGISTRY }}/${{ env.REGISTRY_PATH }}:${{ github.sha }}
            ${{ env.REGISTRY }}/${{ env.REGISTRY_PATH }}:${{ github.ref_name }}
          labels: |
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: build-and-push
    if: github.ref == 'refs/heads/dev'
    environment:
      name: staging
      url: https://staging.soil-prediction.nasa.gov
    timeout-minutes: 30

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Deploy to Kubernetes (Staging)
        uses: azure/k8s-deploy@v4
        with:
          namespace: soil-prediction-staging
          manifests: |
            k8s/staging/deployment.yaml
            k8s/staging/service.yaml
            k8s/staging/ingress.yaml
          images: |
            ${{ env.REGISTRY }}/${{ env.REGISTRY_PATH }}:${{ github.sha }}
          strategy: rolling
          kubectl-version: '1.27'

  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: [lint-and-test, build-and-push]
    if: startsWith(github.ref, 'refs/tags/v')
    environment:
      name: production
      url: https://soil-prediction.nasa.gov
    timeout-minutes: 30

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Deploy to Kubernetes (Production)
        uses: azure/k8s-deploy@v4
        with:
          namespace: soil-prediction-prod
          manifests: |
            k8s/production/deployment.yaml
            k8s/production/service.yaml
            k8s/production/ingress.yaml
          images: |
            ${{ env.REGISTRY }}/${{ env.REGISTRY_PATH }}:${{ github.ref_name }}
          strategy: rolling
          kubectl-version: '1.27'

  performance-test:
    name: Performance Testing
    runs-on: ubuntu-latest
    needs: deploy-staging
    if: github.ref == 'refs/heads/dev'
    timeout-minutes: 45

    steps:
      - name: Run Load Test
        uses: microsoft/load-test@v1
        with:
          loadtest-file: 'tests/performance/loadtest.yml'
          resource-group: 'soil-prediction-rg'
          loadtest-resource: 'soil-prediction-loadtest'
          env: |
            HOST=https://staging.soil-prediction.nasa.gov
            USERS=1000
            DURATION=300
